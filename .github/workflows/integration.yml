name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  luacheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup_luarocks
      - name: Run luacheck
        run: make run_luacheck

  stylua:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: JohnnyMorganz/stylua-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --color always --check lua/

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: nightly
      - uses: actions/checkout@v3
      - uses: ./.github/setup_luarocks
      - name: Run tests
        run: make run_tests

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: snippet-converter
          description: "Convert snippets to the format of your choice"
          pandoc: doc/documentation.md
          version: "NVIM â‰¥ v0.7.0"
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(build): auto-generate vimdoc"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

release:
    name: release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [luacheck, stylua, tests, docs]
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: snippet-converter.nvim
          extra-files: |
            lua/snippet_converter/init.lua
      - uses: actions/checkout@v2
      - name: tag stable versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last stable release"
          git push origin stable
